
# Generated by Qodo Gen
from backend.services.notion_service import NotionService


# Dependencies:
# pip install pytest-mock
import pytest

class TestFilterByDeepLevel:

    # Filters characters correctly by specified deep level and is_npc flag
    def test_filter_by_deep_level_correctly_filters_characters(self, mocker):
        # Arrange
        notion_service = NotionService()
        mock_characters = [
            {'properties': {'deeplevel': 3, 'npc': False}},
            {'properties': {'deeplevel': 3, 'npc': False}},
            {'properties': {'deeplevel': 3, 'npc': False}},
            {'properties': {'deeplevel': 3, 'npc': False}},
            {'properties': {'deeplevel': 2, 'npc': False}}
        ]
        mocker.patch.object(notion_service, 'get_all_characters', return_value=mock_characters)
    
        # Act
        result = notion_service.filter_by_deep_level(3, False)
    
        # Assert
        assert len(result) == 4
        for character in result:
            assert character['properties']['deeplevel'] == 3
            assert character['properties']['npc'] == False

    # No characters match the specified deep level and is_npc flag
    def test_filter_by_deep_level_no_matching_characters(self, mocker):
        # Arrange
        notion_service = NotionService()
        mock_characters = [
            {'properties': {'deeplevel': 1, 'npc': True}},
            {'properties': {'deeplevel': 2, 'npc': True}}
        ]
        mocker.patch.object(notion_service, 'get_all_characters', return_value=mock_characters)
    
        # Act
        result = notion_service.filter_by_deep_level(3, False)
    
        # Assert
        assert result == []